@using Microsoft.AspNetCore.Components.Forms
@using SquirrelsNest.Pecan.Shared.Dto
@using Blazored.FluentValidation

<EditForm Model="@Project" OnValidSubmit="@OnSubmit">
    <FluentValidationValidator/>
    <MudDialog>
        <DialogContent>
            <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild">
                <MudTextField
                    T="string" 
                    Immediate="true"
                    Label="Project Name"
                    HelperText="Name for the project"
                    HelperTextOnFocus="true"
                    @bind-Value="@Project.Name"/>
                <ValidationMessage For="@(() => Project.Name)"/>
                <MudTextField
                    T="string"
                    Label="Description"
                    HelperText="Description for the project"
                    HelperTextOnFocus="true"
                    @bind-Value="@Project.Description"/>
                <ValidationMessage For="@(() => Project.Description)"/>
                <MudTextField
                    T="string"
                    Label="Issue Prefix"
                    HelperText="Characters used to prefix project issue numbers"
                    HelperTextOnFocus="true"
                    @bind-Value="@Project.IssuePrefix"/>
                <ValidationMessage For="@(() => Project.IssuePrefix)"/>
            </MudFocusTrap>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="OnCancel">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] 
    public MudDialogInstance ?  MudDialog { get; set; }
    [Parameter]
    public CreateProjectInput   Project { get; set; } = new();

    private void OnSubmit() => MudDialog?.Close( DialogResult.Ok( Project ));
    private void OnCancel() => MudDialog?.Cancel();
    }
}
