<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Add in the MahApps resource so these are based on those -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="BorderLineColor">#80D0D0D0</Color>

    <SolidColorBrush x:Key="ControlTextColor" Color="#FF878787" />
    <SolidColorBrush x:Key="TrimColor" Color="#FF878787" />
    <SolidColorBrush x:Key="BorderColor" Color="{StaticResource BorderLineColor}" />
    <SolidColorBrush x:Key="BorderTextColor" Color="#FFA0A0A0"/>
    <SolidColorBrush x:Key="PopupBackground" Color="#FFB0B0B0"/>
    <!-- "DefaultForegroundBrush" is used by the FadeTrimming behavior -->
    <SolidColorBrush x:Key="DefaultForegroundBrush" Color="{DynamicResource MahApps.Colors.IdealForeground}"/>

    <Style x:Key="LargeTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="32"/>
    </Style>

    <Style x:Key="MediumTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="28"/>
    </Style>

    <Style x:Key="SmallTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="GeneralTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
    </Style>

    <Style x:Key="ControlTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource GeneralTitleStyle}">
        <Setter Property="Foreground" Value="{StaticResource BorderTextColor}"/>
    </Style>

    <Style x:Key="GeneralButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="5,3"/>
    </Style>

    <Style x:Key="PathButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="GeneralComboStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Padding" Value="5,3"/>
    </Style>

    <Style x:Key="ListViewTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>

    <Style x:Key="ListViewSubTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ListViewTextStyle}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Opacity" Value="0.6"/>
    </Style>

    <Style x:Key="ListViewItemStretch" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="EmptyListTextStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{StaticResource BorderTextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!-- Validation information for text boxes -->
    <Style x:Key="ErrorToolTip" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Removes the white border around the GroupBox border -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="SectionBorderStyle" TargetType="GroupBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                        <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border Grid.Column="0" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>